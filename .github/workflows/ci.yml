name: CI

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']
  workflow_dispatch:

permissions:
  contents: read  #  to fetch code (actions/checkout)

jobs:
  esbuild-platforms:
    # Split this out into its own runner because it's slow
    name: esbuild CI (All Platforms)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Read go.version
        run: |
          echo "GO_VERSION=$(cat go.version)" >> $GITHUB_ENV

      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Ensure all platforms can be built
        run: make platform-all

      # Plan 9 is not a supported platform, but someone wanted esbuild to be able to build for it anyway...
      - name: Ensure esbuild can be built for Plan 9
        run: |
          GOOS=plan9 GOARCH=386 go build ./cmd/esbuild
          GOOS=plan9 GOARCH=amd64 go build ./cmd/esbuild
          GOOS=plan9 GOARCH=arm go build ./cmd/esbuild

  esbuild:
    name: esbuild CI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Read go.version (non-Windows)
        if: matrix.os != 'windows-latest'
        run: |
          echo "GO_VERSION=$(cat go.version)" >> $GITHUB_ENV

      - name: Read go.version (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          echo "GO_VERSION=$(cat go.version)" >> $Env:GITHUB_ENV

      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Setup Deno 1.40.0
        uses: denoland/setup-deno@main
        with:
          deno-version: v1.40.0

      - name: npm ci
        run: cd scripts && npm ci

  